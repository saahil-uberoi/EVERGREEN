@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <script src="~/js/vendor/jquery-1.12.4.min.js"></script>
    <script src="https://kit.fontawesome.com/56942480bb.js" crossorigin="anonymous"></script>
    @*<link rel="stylesheet" type="text/css" href="~/css/memorycard.css">
        <script src="~/js/memorycard.js"></script>*@
    <link rel="stylesheet" type="text/css" href="~/css/button.css">
    <link rel="stylesheet" type="text/css" href="~/css/memorycard.css">
    <script src="~/js/button.js"></script>

    <script>
        function goBack() {
            window.history.back()
        }

    </script>
    <style>
        //default button
        .btn {
            color: #fff;
            cursor: pointer;
            // display: block;
            font-size: 16px;
            font-weight: 400;
            line-height: 45px;
            margin: 0 0 2em;
            max-width: 160px;
            position: relative;
            text-decoration: none;
            text-transform: uppercase;
            width: 100%;
        }
    </style>
</head>
<body style="font-family: 'Montserrat Alternates', sans-serif;
      background-color: hsla(208, 80%, 98%, 1);
      padding: 0 10rem;
      margin: 0;
      height: 100vh;
      display: flex;
      justify-content: center;
      flex-direction: column;
      overflow-x: hidden;">
    <!-- bradcam_area_end -->
    @*<div class="bradcam_area breadcam_bg overlay">
            <div class="container">
                <div class="row">
                    <div class="col-lg-12">
                        <h3>Memory Card Game</h3>
                    </div>
                </div>
            </div>
        </div>*@
    <!-- bradcam_area_end -->
    <i id="score-toggle" class="fas fa-trophy"></i>
    <div class="cards-row">
        <div class="left-card card">
            <div class="choose-username">
                <h1>Enter your name</h1>
                <div class="username-container">
                    <input type="text"
                           id="username"
                           name="username"
                           autocomplete="off"
                           spellcheck="false" />
                    <p class="placeholder" id="placeholder">Username</p>
                </div>
                <button id="play" class="game-button">
                    <i class="fas fa-gamepad"></i>
                </button>
            </div>

            <div id="images-grid" class="hide images-grid"></div>

            <div id="mode-container" class="hide">
                <h1>Be ready</h1>
                <h4>You have 4 seconds to memorise the cards</h4>
                <h1>Choose the difficulty</h1>
                <div class="mode-btns">
                    <button id="easy-btn" class="game-button">
                        Easy
                    </button>
                    <button id="hard-btn" class="game-button">
                        Hard
                    </button>
                </div>
            </div>

            <div id="congrats-container" class="final-container hide">
                <h1>
                    You win! 🎉
                </h1>
                <h1 stylw>You won in <strong id="user-seconds"></strong></h1>
                <button class="play-again-btn game-button">
                    <i class="fas fa-undo-alt"></i>
                </button>
            </div>

            <div id="loose-container" class="final-container hide">
                <h1>
                    You loose! 😵
                </h1>
                <h3>You did <strong id="tries-span"></strong> pairs in a row </h3>
                <button class="play-again-btn game-button">
                    <i class="fas fa-undo-alt"></i>
                </button>
            </div>
        </div>

        <div id="score-container" class="card score-container h">

            <i class="fas fa-trophy" id="scores-trophy"></i>
            <h2 class="user-scores score-title">Leaderboard</h2>
            <div class="ribbon-wrapper">
                <img class="ribbon-tail"
                     src="https://cdn.glitch.com/56d96ce9-5171-477f-8560-558ec3af0051%2Fribbon-tail.svg?v=1596043434209"
                     alt="" />
                <img class="ribbon-score"
                     src="https://cdn.glitch.com/56d96ce9-5171-477f-8560-558ec3af0051%2Fribbon-score.svg?v=1596046610666"
                     alt="" />
            </div>

            <div id="user-scores" class="user-scores"></div>
        </div>
    </div>
    <div >
        <button class="game-button" style="width:6vw; height:3vw" onclick="goBack()"><span style="position:relative; left:-1.2vw">Back</span></button>
    </div>

    <script src="~/js/memorycard.js"></script>
    @*<script>
            let imgSrc = [
                {
                    pairId: 0,
                    src:
                        "../img/grassland/Golden-Sun-Moth.png"
                },
                {
                    pairId: 1,
                    src:
                        "../img/grassland/European-rabbit.png"
                },
                {
                    pairId: 2,
                    src:
                        "../img/rockland/Striped-Legless-Lizard.png"
                },
                {
                    pairId: 3,
                    src:
                        "../img/rockland/Hardheads.png"
                },
                {
                    pairId: 4,
                    src:
                        "../img/wetland/Growling-Grass-Frog.png"
                },
                {
                    pairId: 5,
                    src:
                        "../img/wetland/Australian-Painted-snipe.png"
                },
                {
                    pairId: 7,
                    src:
                        "../img/woodland/Blackberry.png"
                },
                {
                    pairId: 8,
                    src:
                        "../img/woodland/Plains-wanderer.png"
                }
            ];

            let playBtn = document.getElementById("play");
            let chooseUserDiv = document.querySelector(".choose-username");
            let imgsGrid = document.getElementById("images-grid");
            let congratsDiv = document.getElementById("congrats-container");
            let looseDiv = document.getElementById("loose-container");
            let playAgainBtns = document.querySelectorAll(".play-again-btn");
            let modeContainer = document.getElementById("mode-container");
            let hardBtn = document.getElementById("hard-btn");
            let easyBtn = document.getElementById("easy-btn");

            let tries = 0;
            let hardMode = false;

            let imgDivArray = createGridContentArray(imgSrc);
            let discoveredCards = [];
            let currentUser = "";
            let startTime;
            let scoresController = scoreBarController("user-scores");

            imgDivArray.forEach(targetCard => {
                targetCard.addEventListener("click", () => {
                    if (isFlipped(targetCard)) {
                        targetCard.classList.remove("flipped-cell");

                        if (discoveredCards.length % 2 == 0) {
                            discoveredCards.push(targetCard);
                        } else {
                            let lastCard = discoveredCards[discoveredCards.length - 1];
                            tries++;
                            if (areEqualCards(targetCard, lastCard)) {
                                discoveredCards.push(targetCard);

                                if (isGameEnd(discoveredCards, imgDivArray)) {
                                    setTimeout(() => {
                                        winGame(currentUser);
                                    }, 300);
                                }
                            } else {
                                discoveredCards.pop();
                                setTimeout(() => {
                                    lastCard.classList.add("flipped-cell");
                                    targetCard.classList.add("flipped-cell");
                                    if (hardMode) {
                                        looseGame(currentUser);
                                    }
                                }, 300);
                            }
                        }
                    }
                });
            });

            playBtn.addEventListener("click", goToModePage);

            document.addEventListener("keydown", event => {
                if (!chooseUserDiv.classList.contains("hide") && event.which === 13) {
                    goToModePage();
                } else if (
                    (!looseDiv.classList.contains("hide") ||
                        !congratsDiv.classList.contains("hide")) &&
                    event.which === 13
                ) {
                    playAgain();
                }
            });

            for (let btn of playAgainBtns) {
                btn.addEventListener("click", playAgain);
            }

            easyBtn.addEventListener("click", () => {
                hardMode = false;
                startGame(currentUser);
            });

            hardBtn.addEventListener("click", () => {
                hardMode = true;
                startGame(currentUser);
            });

            /*--------------------------------------------------*/
            /*-------------------- OBJECTS ---------------------*/
            /*--------------------------------------------------*/

            function scoreBarController(barId) {
                let scoresBar = document.getElementById(barId);

                return {
                    getUser(username) {
                        return document.querySelector(`[data-username=${username}]`);
                    },

                    hasUser(username) {
                        let userContainer = this.getUser(username);
                        return userContainer !== null;
                    },

                    createPlayingUser(username) {
                        if (this.hasUser(username)) {
                            let userContainer = this.getUser(username);
                            userContainer.remove();
                            userContainer.lastElementChild.textContent = "Currently playing...";
                            scoresBar.insertAdjacentElement("afterbegin", userContainer);
                        } else {
                            let userContainer = createUserScoreDiv(username);
                            if (scoresBar.childElementCount == 5) {
                                scoresBar.lastElementChild.remove();
                            }
                            scoresBar.insertAdjacentElement("afterbegin", userContainer);
                        }
                    },

                    setUserTime(username, seconds) {
                        if (this.hasUser(username)) {
                            let userContainer = this.getUser(username);
                            if (!hardMode) {
                                userContainer.lastElementChild.innerHTML =
                                    `<i class="fas fa-stopwatch"></i> ${Math.floor(seconds)} seconds` +
                                    ` <i class="fas fa-mouse-pointer"></i> ${tries} tries`;
                            } else {
                                userContainer.lastElementChild.innerHTML = `<i class="fas fa-stopwatch"></i> ${Math.floor(
                                    seconds
                                )} seconds (Hard Mode)`;
                            }
                        }
                    },

                    setUserLost(username) {
                        let userContainer = this.getUser(username);
                        userContainer.lastElementChild.innerHTML = `<p>Lost! - ${tries -
                            1} pairs in a row! </p>`;
                    }
                };
            }

            function createUserScoreDiv(username) {
                let container = document.createElement("div");
                container.setAttribute("data-username", username);
                container.innerHTML = `<h2>${username}</h2> <p>Currently playing...</p>`;
                return container;
            }

            /*--------------------------------------------------*/
            /*----------------- USEFULL FUNCTIONS --------------*/
            /*--------------------------------------------------*/

            function goToModePage() {
                let username = document.getElementById("username").value;
                if (isValidUsername(username)) {
                    currentUser = username.toLowerCase();
                    modeContainer.classList.remove("hide");
                    chooseUserDiv.classList.add("hide");
                }
            }

            function playAgain() {
                currentUser = "";
                discoveredCards = [];
                tries = 0;
                unFlipCards(imgDivArray);

                looseDiv.classList.add("hide");
                congratsDiv.classList.add("hide");

                chooseUserDiv.classList.remove("hide");
                document.getElementById("username").value = "";
            }

            function startGame(username) {
                startTime = Date.now();
                scoresController.createPlayingUser(username);

                shuffle(imgDivArray);

                imgsGrid.innerHTML = "";
                imgDivArray.forEach(img => {
                    imgsGrid.appendChild(img);
                });

                modeContainer.classList.add("hide");
                imgsGrid.classList.remove("hide");

                setTimeout(() => {
                    flipCards(imgDivArray);
                }, 3000);
            }

            function isGameEnd(discoveredCards, cards) {
                return discoveredCards.length === cards.length;
            }

            function winGame(username) {
                let finalTimeSpan = document.getElementById("user-seconds");
                let totalSeconds = (Date.now() - startTime) / 1000;
                finalTimeSpan.textContent = `${Math.floor(totalSeconds)} seconds`;

                scoresController.setUserTime(username, totalSeconds);

                imgsGrid.classList.add("hide");
                congratsDiv.classList.remove("hide");
            }

            function looseGame(username) {
                let triesSpan = document.getElementById("tries-span");
                let triesInARow = tries - 1;
                scoresController.setUserLost(username);
                triesSpan.textContent = triesInARow;
                imgsGrid.classList.add("hide");
                looseDiv.classList.remove("hide");
            }

            function areEqualCards(card1, card2) {
                return card1.getAttribute("data-pair") === card2.getAttribute("data-pair");
            }

            function isValidUsername(name) {
                return name !== undefined && name.trim() !== "";
            }

            function isFlipped(card) {
                return card.classList.contains("flipped-cell");
            }

            function flipCards(cards) {
                cards.forEach(card => card.classList.add("flipped-cell"));
            }

            function unFlipCards(cards) {
                cards.forEach(card => card.classList.remove("flipped-cell"));
            }

            function createGridContentArray(imgs) {
                let doubled = doubleContent(imgSrc);
                return doubled.map(img => createImgDiv(img));
            }

            function createImgDiv(img) {
                let container = document.createElement("div");
                container.setAttribute("data-pair", img.pairId);
                container.style.backgroundImage = `url(${img.src})`;
                container.classList.add("cell");
                return container;
            }

            function doubleContent(arr) {
                return arr.concat(arr);
            }

            function shuffle(array) {
                array.sort(() => Math.random() - 0.5);
            }

            // Placeholder fade
            var usernameInput = document.getElementById("username");
            var placeholder = document.getElementById("placeholder");

            usernameInput.addEventListener("focusin", () => {
                if (usernameInput.value == "") {
                    placeholder.style.opacity = "0";
                }
            });

            usernameInput.addEventListener("focusout", () => {
                if (usernameInput.value == "") {
                    placeholder.style.opacity = "1";
                }
            });

            // Show responsive leaderboard
            let scoreToggle = document.getElementById("score-toggle")
            let scoreContainer = document.getElementById("score-container")

            scoreToggle.addEventListener("click", () => {
                scoreContainer.classList.toggle("fade-toggle")
            })
        </script>*@
</body>
</html>
